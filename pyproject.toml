# SPDX-FileCopyrightText: 2024-present Stuart Ellis <stuart@stuartellis.name>
#
# SPDX-License-Identifier: MIT
#

[tool.poetry]
name = "canario"
version = "0.1.0"
description = "canario checks the healthiness of the environment that it is in"
authors = ["Stuart Ellis <stuart@stuartellis.name>"]
readme = "README.md"
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
]
homepage = "https://github.com/stuartellis/canario"
repository = "https://github.com/stuartellis/canario"
packages = [{include = "canario", from = "src"}]

[tool.poetry.urls]
Issues = "https://github.com/stuartellis/canario/issues"

[tool.poetry.scripts]
cli = "canario.cli:main"

[tool.poetry_bumpversion.file."src/canario/__init__.py"]

[tool.poetry.dependencies]
httpx = {version = "^0.27.0", extras = ["http2"]}
pydantic = "^2.6.3"
python = "^3.12"
pydantic-settings = "^2.2.1"

[tool.poetry.group.dev]

[tool.poetry.group.dev.dependencies]
coverage = {extras = ["toml"], version = "^7.4.3"}
mypy = "^1.9.0"
pytest = "^8.0.2"
ruff = "^0.3.2"
mkdocs = "^1.5.3"
mkdocstrings = {version = "^0.24.0", extras = ["python"]}
pymdown-extensions = "^10.7.1"

[tool.project.containers]
runner = {app_name = "canario", base_image = "python:3.12.2-slim-bookworm", build_file = "containers/poetry-runner.dockerfile"}

[tool.project.utilities]
poetry = "1.8.2"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]

disallow_untyped_defs = true
follow_imports = "normal"
pretty = true
show_column_numbers = true
warn_no_return = false
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
src = ["src", "tests"]
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
# Disable some rules for compatibility with ruff formatter:
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = ["COM812", "COM819", "D206", "D212", "D300", "E111", "E114", "E117", "ISC001", "ISC002", "Q000", "Q001", "Q002", "Q003", "T201", "W191"]
unfixable = [
    "T201",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"./tests/*.py" = [
    "S101",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
